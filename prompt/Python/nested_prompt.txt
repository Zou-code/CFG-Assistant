@Persona{
    @Description{
        You are a senior programmer, You can accurately understand the code and its structure and block the code according to the code structure.
    }
}

@ContextControl{
    @Rules
    - Generate corresponding @Output based on @Input in @Work.
    - Please refer to the six examples of @Examples.
    - The code of a submodule within a module should be replaced with the structural name of the submodule.
    - There is no need to separate each code block with an empty line.
    - Note that the @Output format should be strictly consistent with the example, including the indentation of the code and the symbol '*'.
    - Your answer should only contain the content of @Output, nothing else.
}

@Format{
    @Input{
        [code]
        [structure]
    }
    @Output{
        [the code for generating subgraphs of the flowchart using the corresponding Graphviz Python library]
    }
}

@Work{
    @Input{
        [{input_code}]
        [{input_structure}]
    }
}

@Examples{
    @Example1{
        @Input{
            [if __name__ == "__main__":
                x = 10
                while x < 20:
                    print("value of x :", x)
                    x += 1]
            [method_block
                while_block_1]
        }
        @Output{
        [*method_block*
        if __name__ == "__main__":
            x = 10
            while_block_1
        *while_block_1*
        while x < 20:
            print("value of x :", x)
            x += 1]
        }
    }
    @Example2{
        @Input{
            [if __name__ == "__main__":
                x = 10
                if x < 20:
                    print("这是 if 语句")]
            [method_block
                if_block_1]
        }
        @Output{
        [*method_block*
        if __name__ == "__main__":
            x = 10
            if_block_1
        *if_block_1*
        if x < 20:
            print("这是 if 语句")]
        }
    }
    @Example3{
        @Input{
            [if __name__ == "__main__":
                x = 30
                if x == 10:
                    print("Value of X is 10")
                elif x == 20:
                    print("Value of X is 20")
                elif x == 30:
                    print("Value of X is 30")
                else:
                    print("这是 else 语句")]
            [method_block
                if_block_1]
        }
        @Output{
        [*method_block*
        if __name__ == "__main__":
            x = 30
            if_block_1
        *if_block_1*
        if x == 10:
            print("Value of X is 10")
        elif x == 20:
            print("Value of X is 20")
        elif x == 30:
            print("Value of X is 30")
        else:
            print("这是 else 语句")]
        }
    }
    @Example4{
        @Input{
            [if __name__ == "__main__":
                x = 10
                for i in range(x):
                    print(i, end='')
                print('this is ten numbers')]
            [method_block
                for_block_1]
        }
        @Output{
        [*method_block*
        if __name__ == "__main__":
            x = 10
            for_block_1
            print('this is ten numbers')
        *for_block_1*
        for i in range(x):
            print(i, end='')]
        }
    }
    @Example5{
        @Input{
            [if __name__ == "__main__":
                for i in range(10):
                    for j in range(10):
                        if i * 10 + j <= 29:
                            print(f"{i}{j}  ", end='')
                    print("\n -------------------------------------- \n")
                for k in range(10):
                    print(k, end=' ')
                print("输出完毕！")]
            [method_block
                for_block_1
                    for_block_2
                        if_block_1
                for_block_3]
        }
        @Output{
        [*method_block*
        if __name__ == "__main__":
            for_block_1
            for_block_3
            print("输出完毕！")
        *for_block_1*
        for i in range(10):
            for_block_2
            print("\n -------------------------------------- \n")
        *for_block_2*
        for j in range(10):
            if_block_1
        *if_block_1*
        if i * 10 + j <= 29:
            print(f"{i}{j}  ", end='')
        *for_block_3*
        for k in range(10):
            print(k, end=' ')]
        }
    }
    @Example6{
        @Input{
            [if __name__ == "__main__":
                grade = 'C'
                match grade:
                    case 'A':
                        print("完美")
                    case 'B':
                        print("优秀")
                    case 'C':
                        print("良好")
                    case 'D':
                        print("及格")
                    case 'F':
                        print("挂科")
                    case _:
                        print("")
                print("你的等级是：", grade)]
            [method_block
                match_block_1]
        }
        @Output{
        [*method_block*
        if __name__ == "__main__":
            grade = 'C'
            match_block_1
            print("你的等级是：", grade)
        *match_block_1*
        match grade:
            case 'A':
                print("完美")
            case 'B':
                print("优秀")
            case 'C':
                print("良好")
            case 'D':
                print("及格")
            case 'F':
                print("挂科")
            case _:
                print("")]
        }
    }
}