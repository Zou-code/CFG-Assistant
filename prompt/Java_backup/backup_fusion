example1:
input:
['''
public static void main(String[] args) {
    int x = 10;
    while( x < 20 ) {
        System.out.print("value of x : " + x );
        x++;
        System.out.print("\n");
    }
}
''','''
*method_block*
dot.node('A', 'Start of main')
dot.node('B', 'int x = 10')
dot.node('C', 'while_block_1')
dot.node('D', 'End of main')
dot.edge('A', 'B')
dot.edge('B', 'C')
dot.edge('C', 'D')
*while_block_1*
dot.node('A', 'while(x < 20)')
dot.node('B', 'System.out.print("value of x: " + x)')
dot.node('C', 'x++')
dot.node('D', 'System.out.print("\\n")')
dot.node('E', 'Exit while')
dot.edge('A', 'B', label='x < 20 (true)')
dot.edge('B', 'C')
dot.edge('C', 'D')
dot.edge('D', 'A')
dot.edge('A', 'E', label='x >= 20 (false)')
''']
output:
dot.node('A', 'Start of main')
dot.node('B', 'int x = 10')
dot.node('C', 'while (x < 20)')
dot.node('D', 'System.out.print("value of x: " + x)')
dot.node('E', 'x++')
dot.node('F', 'System.out.print("\\n")')
dot.node('G', 'End of main')
dot.edge('A', 'B')
dot.edge('B', 'C')
dot.edge('C', 'D', label='x < 20 (true)')
dot.edge('C', 'G', label='x >= 20 (false)')
dot.edge('D', 'E')
dot.edge('E', 'F')
dot.edge('F', 'C')

example2:
['''
input:
public static void main(String args[]){
    int x = 10;
    if( x < 20 ){
        System.out.print("这是 if 语句");
    }
}
''','''
*method_block*
dot.node('A', 'Start of main')
dot.node('B', 'int x = 10')
dot.node('C', 'if_block_1')
dot.node('D', 'End of main')
dot.edge('A', 'B')
dot.edge('B', 'C')
dot.edge('C', 'D')
*if_block_1*
dot.node('A', 'if (x < 20)')
dot.node('B', 'System.out.print("这是 if 语句")')
dot.node('C', 'End of if')
dot.edge('A', 'B', label='x < 20 (true)')
dot.edge('A', 'C', label='x >= 20 (false)')
''']
output:
dot.node('A', 'Start of main')
dot.node('B', 'int x = 10')
dot.node('C', 'if (x < 20)')
dot.node('D', 'End of main')
dot.edge('A', 'B')
dot.edge('B', 'C')
dot.edge('C', 'D')
dot.node('E', 'System.out.print("这是 if 语句")')
dot.node('F', 'End of if')
dot.edge('C', 'E', label='x < 20 (true)')
dot.edge('C', 'F', label='x >= 20 (false)')

example3:
input:
['''
public static void main(String args[]){
    int x = 30;
    if( x == 10 ){
        System.out.print("Value of X is 10");
    }else if( x == 20 ){
        System.out.print("Value of X is 20");
    }else if( x == 30 ){
        System.out.print("Value of X is 30");
    }else{
        System.out.print("这是 else 语句");
    }
}
''','''
*method_block*
dot.node('A', 'Start of main')
dot.node('B', 'int x = 30')
dot.node('C', 'if_block_1')
dot.node('D', 'End of main')
dot.edge('A', 'B')
dot.edge('B', 'C')
dot.edge('C', 'D')
*if_block_1*
dot.node('A', 'if (x == 10)')
dot.node('B', 'System.out.print("Value of X is 10")')
dot.node('C', 'else if (x == 20)')
dot.node('D', 'System.out.print("Value of X is 20")')
dot.node('E', 'else if (x == 30)')
dot.node('F', 'System.out.print("Value of X is 30")')
dot.node('G', 'else')
dot.node('H', 'System.out.print("这是 else 语句")')
dot.node('I', 'End of if-else')
dot.edge('A', 'B', label='true')
dot.edge('A', 'C', label='false')
dot.edge('C', 'D', label='true')
dot.edge('C', 'E', label='false')
dot.edge('E', 'F', label='true')
dot.edge('E', 'G', label='false')
dot.edge('B', 'I')
dot.edge('D', 'I')
dot.edge('F', 'I')
dot.edge('G', 'H')
dot.edge('H', 'I')
''']
output:
dot.node('A', 'Start of main')
dot.node('B', 'int x = 30')
dot.node('C', 'if (x == 10)')
dot.node('D', 'End of main')
dot.edge('A', 'B')
dot.edge('B', 'C')
dot.edge('C', 'D')
dot.node('E', 'System.out.print("Value of X is 10")')
dot.node('F', 'else if (x == 20)')
dot.node('G', 'System.out.print("Value of X is 20")')
dot.node('H', 'else if (x == 30)')
dot.node('I', 'System.out.print("Value of X is 30")')
dot.node('J', 'else')
dot.node('K', 'System.out.print("这是 else 语句")')
dot.node('L', 'End of if-else')
dot.edge('C', 'E', label='true')
dot.edge('C', 'F', label='false')
dot.edge('F', 'G', label='true')
dot.edge('F', 'H', label='false')
dot.edge('H', 'I', label='true')
dot.edge('H', 'J', label='false')
dot.edge('E', 'L')
dot.edge('D', 'L')
dot.edge('I', 'L')
dot.edge('J', 'K')
dot.edge('K', 'L')

example4:
input:
['''
public static void main(String []args) {
    for(int i = 0; i < 10; i++){
        for(int j = 0; j < 10; j++){
            if(i * 10 + j <= 29){
                System.out.print("" + i + j +"  ");
            }
        }
        System.out.println("\n -------------------------------------- \n");
    }
    System.out.println("输出完毕！");
}
''','''
*method_block*
dot.node('A', 'Start of main')
dot.node('B', 'for_block_1')
dot.node('C', 'System.out.println("输出完毕！")')
dot.node('D', 'End of main')
dot.edge('A', 'B')
dot.edge('B', 'C')
dot.edge('C', 'D')
*for_block_1*
dot.node('A', 'for(int i = 0; i < 10; i++)')
dot.node('B', 'for_block_2')
dot.node('C', 'System.out.println("\\n -------------------------------------- \\n")')
dot.node('D', 'End of for')
dot.edge('A', 'B', label='i < 10 (true)')
dot.edge('B', 'C')
dot.edge('C', 'A')
dot.edge('A', 'D', label='i >= 10 (false)')
*for_block_2*
dot.node('A', 'for(int j = 0; j < 10; j++)')
dot.node('B', 'if_block_1')
dot.node('C', 'End of for')
dot.edge('A', 'B', label='j < 10 (true)')
dot.edge('B', 'A')
dot.edge('A', 'C', label='j >= 10 (false)')
*if_block_1*
dot.node('A', 'if(i * 10 + j <= 29)')
dot.node('B', 'System.out.print("" + i + j + "  ")')
dot.node('C', 'End of if')
dot.edge('A', 'B', label='i * 10 + j <= 29 (true)')
dot.edge('B', 'C')
dot.edge('A', 'C', label='i * 10 + j > 29 (false)')
''']
output:
dot.node('A', 'Start of main')
dot.node('B', 'for(int i = 0; i < 10; i++)')
dot.node('C', 'System.out.println("输出完毕！")')
dot.node('D', 'End of main')
dot.edge('A', 'B')
dot.edge('B', 'C')
dot.edge('C', 'D')
dot.node('E', 'for(int j = 0; j < 10; j++)')
dot.node('F', 'if(i * 10 + j > 29)')
dot.node('G', 'System.out.print("" + i + j + "  ")')
dot.node('H', 'System.out.println("\\n -------------------------------------- \\n")')
dot.edge('B', 'E', label='i < 10 (true)')
dot.edge('E', 'F', label='j < 10 (true)')
dot.edge('F', 'G', label='false')
dot.edge('G', 'E')
dot.edge('E', 'H')
dot.edge('H', 'B')
dot.edge('B', 'C', label='i >= 10 (false)')
dot.edge('F', 'C', label='true')

example5:
input:
['''
public static void main(String args[]){
    char grade = 'C';
    switch(grade)
    {
        case 'A' :
            System.out.println("完美");
        case 'B' :
            System.out.println("优秀");
        case 'C' :
            System.out.println("良好");
        case 'D' :
            System.out.println("及格");
        case 'F' :
            System.out.println("挂科");
        default :
            System.out.println("未知");
    }
    System.out.println("你的等级是：" + grade);
}
''','''
*method_block*
dot.node('A', 'Start of main')
dot.node('B', 'char grade = \'C\'')
dot.node('C', 'switch_block_1')
dot.node('D', 'System.out.println("你的等级是：" + grade)')
dot.node('E', 'End of main')
dot.edge('A', 'B')
dot.edge('B', 'C')
dot.edge('C', 'D')
dot.edge('D', 'E')
*switch_block_1*
dot.node('A', 'switch(grade)')
dot.node('B', 'case \'A\'')
dot.node('C', 'System.out.println("完美")')
dot.node('D', 'break')
dot.node('E', 'case \'B\'')
dot.node('F', 'System.out.println("优秀")')
dot.node('G', 'break')
dot.node('H', 'case \'C\'')
dot.node('I', 'System.out.println("良好")')
dot.node('J', 'break')
dot.node('K', 'case \'D\'')
dot.node('L', 'System.out.println("及格")')
dot.node('M', 'break')
dot.node('N', 'case \'F\'')
dot.node('O', 'System.out.println("挂科")')
dot.node('P', 'break')
dot.node('Q', 'default')
dot.node('R', 'System.out.println("未知")')
dot.node('S', 'End of switch')
dot.edge('A', 'B')
dot.edge('B', 'C', label='true')
dot.edge('C', 'D')
dot.edge('D', 'E')
dot.edge('E', 'F', label='true')
dot.edge('F', 'G')
dot.edge('G', 'H')
dot.edge('H', 'I', label='true')
dot.edge('I', 'J')
dot.edge('J', 'K')
dot.edge('K', 'L', label='true')
dot.edge('L', 'M')
dot.edge('M', 'N')
dot.edge('N', 'O', label='true')
dot.edge('O', 'P')
dot.edge('P', 'Q')
dot.edge('Q', 'R', label='true')
dot.edge('R', 'S')
dot.edge('D', 'S')
dot.edge('G', 'S')
dot.edge('J', 'S')
dot.edge('M', 'S')
dot.edge('P', 'S')
dot.edge('R', 'S')
''']
output:
dot.node('A', 'Start of main')
dot.node('B', 'char grade = \'C\'')
dot.node('C', 'switch(grade)')
dot.node('D', 'System.out.println("你的等级是：" + grade)')
dot.node('E', 'End of main')
dot.edge('A', 'B')
dot.edge('B', 'C')
dot.edge('C', 'D')
dot.edge('D', 'E')
dot.node('F', 'case \'A\'')
dot.node('G', 'System.out.println("完美")')
dot.node('H', 'case \'B\'')
dot.node('I', 'System.out.println("优秀")')
dot.node('J', 'case \'C\'')
dot.node('K', 'System.out.println("良好")')
dot.node('L', 'case \'D\'')
dot.node('M', 'System.out.println("及格")')
dot.node('N', 'case \'F\'')
dot.node('O', 'System.out.println("挂科")')
dot.node('P', 'default')
dot.node('Q', 'System.out.println("未知")')
dot.edge('C', 'F', label='grade == \'A\'')
dot.edge('F', 'G')
dot.edge('G', 'D')
dot.edge('C', 'H', label='grade == \'B\'')
dot.edge('H', 'I')
dot.edge('I', 'D')
dot.edge('C', 'J', label='grade == \'C\'')
dot.edge('J', 'K')
dot.edge('K', 'D')
dot.edge('C', 'L', label='grade == \'D\'')
dot.edge('L', 'M')
dot.edge('M', 'D')
dot.edge('C', 'N', label='grade == \'F\'')
dot.edge('N', 'O')
dot.edge('O', 'D')
dot.edge('C', 'P', label='default')
dot.edge('P', 'Q')
dot.edge('Q', 'D')

Please refer to the above five examples to generate the corresponding 'output' based on the 'input' below.
Please note that there can be at most one direct edge connecting two nodes.
Except for the outermost code block, after a code block ends, it should continue executing the next statement of the outer code block.
input:
['''
{input_code}
''','''
{input_fusion}
''']
output: